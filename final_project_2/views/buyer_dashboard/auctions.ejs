<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>DriveBidRent - Available Auctions</title>
    <style>
        @import url("https://fonts.googleapis.com/css2?family=Montserrat:wght@400;500;600;700&display=swap");

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: "Montserrat", sans-serif;
        }

        body {
            background-color: #ffffff;
            color: #333333;
        }

        /* Page Header */
        .page-header {
            background: linear-gradient(135deg, #ff6b00, #ff9a44);
            color: white;
            padding: 2rem;
            text-align: center;
            margin-bottom: 2rem;
        }

        .page-header h1 {
            font-size: 2.5rem;
            margin-bottom: 0.5rem;
        }

        /* Filters Section */
        .filters {
            background-color: #f9f9f9;
            padding: 1.5rem;
            border-radius: 10px;
            margin-bottom: 2rem;
            max-width: 1200px;
            margin-left: auto;
            margin-right: auto;
        }

        .filters h3 {
            margin-bottom: 1rem;
            color: #ff6b00;
        }

        .filter-form {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 1rem;
        }

        .filter-group {
            margin-bottom: 1rem;
        }

        .filter-group label {
            display: block;
            margin-bottom: 0.5rem;
            font-weight: 500;
        }

        .filter-group select,
        .filter-group input {
            width: 100%;
            padding: 0.5rem;
            border: 1px solid #ddd;
            border-radius: 5px;
        }

        .filter-buttons {
            grid-column: 1 / -1;
            display: flex;
            justify-content: center;
            gap: 1rem;
            margin-top: 1rem;
        }

        .filter-btn {
            background-color: #ff6b00;
            color: white;
            border: none;
            padding: 0.5rem 1.5rem;
            border-radius: 5px;
            cursor: pointer;
            font-weight: 500;
            transition: background-color 0.3s;
        }

        .filter-btn:hover {
            background-color: #e65c00;
        }

        .reset-btn {
            background-color: #f5f5f5;
            color: #333;
            border: 1px solid #ddd;
        }

        .reset-btn:hover {
            background-color: #e5e5e5;
        }

        /* Auctions Grid */
        .auctions-container {
            padding: 0 2rem;
            max-width: 1200px;
            margin: 0 auto;
        }

        .car-container {
            display: grid;
            grid-template-columns: repeat(3, 1fr);
            gap: 2rem;
            margin-bottom: 2rem;
        }

        /* Car Cards from your original css */
        .car-card {
            background-color: #ffffff;
            border-radius: 1rem;
            padding: 1.5rem;
            position: relative;
            transition: transform 0.3s ease, box-shadow 0.3s ease;
            border: 1px solid #ff6b00;
            height: 550px;
            display: flex;
            flex-direction: column;
        }

        .car-card:hover {
            transform: translateY(-10px);
            box-shadow: 0 10px 20px rgba(255, 107, 0, 0.3);
        }

        .hot-tag, .new-tag {
            position: absolute;
            top: 1rem;
            left: 1rem;
            background-color: #ff6b00;
            color: white;
            padding: 2px 15px;
            border-radius: 10px;
            font-size: 15px;
            font-weight: 400;
        }

        .heart-btn {
            position: absolute;
            top: 1rem;
            right: 1rem;
            background: none;
            border: none;
            color: #ccc;
            font-size: 1.5rem;
            cursor: pointer;
            transition: color 0.3s ease;
        }

        .heart-btn[data-liked="true"] {
            color: #ff6b00;
        }

        .car-card img {
            width: 100%;
            height: 180px;
            object-fit: cover;
            border-radius: 0.5rem;
            margin-bottom: 1rem;
        }

        .car-card h3 {
            font-size: 1.3rem;
            margin-bottom: 0.5rem;
            color: #ff6b00;
        }

        .auction-date {
            color: #666666;
            margin-bottom: 1rem;
        }

        .car-details {
            background-color: #f9f9f9;
            padding: 1rem;
            border-radius: 0.5rem;
            margin-bottom: 1rem;
            flex-grow: 1;
        }

        .car-details p {
            margin-bottom: 0.5rem;
            color: #333333;
        }

        .button-container {
            display: flex;
            justify-content: space-between;
        }

        .details-btn {
            display: inline-block;
            background-color: #ff6b00;
            color: white;
            padding: 0.5rem 1rem;
            border-radius: 0.3rem;
            text-decoration: none;
            transition: background-color 0.3s ease;
            flex: 1;
            margin-right: 0.5rem;
            text-align: center;
        }

        .bid-btn {
            display: inline-block;
            background-color: #ff6b00;
            color: white;
            padding: 0.5rem 1rem;
            border-radius: 0.3rem;
            text-decoration: none;
            transition: background-color 0.3s ease;
            flex: 1;
            margin-left: 0.5rem;
            text-align: center;
        }

        .bid-btn:hover,
        .details-btn:hover {
            background-color: #e65c00;
        }

        /* No Items Message */
        .no-items {
            text-align: center;
            grid-column: 1 / -1;
            padding: 2rem;
            color: #666;
            font-size: 1.2rem;
        }

        /* Pagination */
        .pagination {
            display: flex;
            justify-content: center;
            margin: 2rem 0;
        }

        .pagination button {
            background-color: #f5f5f5;
            border: 1px solid #ddd;
            padding: 0.5rem 1rem;
            margin: 0 0.25rem;
            cursor: pointer;
            border-radius: 5px;
            transition: background-color 0.3s;
        }

        .pagination button.active {
            background-color: #ff6b00;
            color: white;
            border-color: #ff6b00;
        }

        .pagination button:hover:not(.active) {
            background-color: #e5e5e5;
        }

        /* Responsive Design */
        @media (max-width: 1024px) {
            .car-container {
                grid-template-columns: repeat(2, 1fr);
            }
        }

        @media (max-width: 768px) {
            .car-container {
                grid-template-columns: 1fr;
            }

            .button-container {
                flex-direction: column;
                gap: 0.5rem;
            }

            .details-btn,
            .bid-btn {
                margin: 0;
                width: 100%;
            }

            .filter-form {
                grid-template-columns: 1fr;
            }
        }
    </style>
</head>
<body>
    <!-- Include Navigation Bar -->
    <%- include('partials/navbar') %>

    <!-- Page Header -->
    <div class="page-header">
        <h1>Available Auctions</h1>
        <p>Find your dream car at the best price through our transparent auction system</p>
    </div>

    <!-- Filters Section -->
    <div class="filters">
        <h3>Filter Auctions</h3>
        <form class="filter-form" method="GET" action="/buyer_dashboard">
            <input type="hidden" name="page" value="auctions">
            
            <div class="filter-group">
                <label for="search">Search by Name</label>
                <input type="text" id="search" name="search" placeholder="Search for vehicles..." value="<%= locals.search || '' %>">
            </div>
            
            <div class="filter-group">
                <label for="condition">Condition</label>
                <select id="condition" name="condition">
                    <option value="">All Conditions</option>
                    <option value="excellent" <%= locals.condition === 'excellent' ? 'selected' : '' %>>Excellent</option>
                    <option value="good" <%= locals.condition === 'good' ? 'selected' : '' %>>Good</option>
                    <option value="fair" <%= locals.condition === 'fair' ? 'selected' : '' %>>Fair</option>
                </select>
            </div>
            
            <div class="filter-group">
                <label for="fuelType">Fuel Type</label>
                <select id="fuelType" name="fuelType">
                    <option value="">All Types</option>
                    <option value="petrol" <%= locals.fuelType === 'petrol' ? 'selected' : '' %>>Petrol</option>
                    <option value="diesel" <%= locals.fuelType === 'diesel' ? 'selected' : '' %>>Diesel</option>
                </select>
            </div>
            
            <div class="filter-group">
                <label for="transmission">Transmission</label>
                <select id="transmission" name="transmission">
                    <option value="">All Types</option>
                    <option value="manual" <%= locals.transmission === 'manual' ? 'selected' : '' %>>Manual</option>
                    <option value="automatic" <%= locals.transmission === 'automatic' ? 'selected' : '' %>>Automatic</option>
                </select>
            </div>
            
            <div class="filter-group">
                <label for="minPrice">Min Price (₹)</label>
                <input type="number" id="minPrice" name="minPrice" placeholder="Min Price" value="<%= locals.minPrice || '' %>">
            </div>
            
            <div class="filter-group">
                <label for="maxPrice">Max Price (₹)</label>
                <input type="number" id="maxPrice" name="maxPrice" placeholder="Max Price" value="<%= locals.maxPrice || '' %>">
            </div>
            
            <div class="filter-buttons">
                <button type="submit" class="filter-btn">Apply Filters</button>
                <button type="reset" class="filter-btn reset-btn" onclick="window.location='/buyer_dashboard?page=auctions'">Reset Filters</button>
            </div>
        </form>
    </div>

    <!-- Auctions List -->
    <div class="auctions-container">
        <div class="car-container">
            <% if (auctions && auctions.length > 0) { %>
                <% auctions.forEach(auction => { %>
                    <div class="car-card">
                        <% if (new Date() - new Date(auction.auctionDate) < -7 * 24 * 60 * 60 * 1000) { %>
                            <span class="hot-tag">Hot</span>
                        <% } else if (new Date() - new Date(auction.createdAt) < 3 * 24 * 60 * 60 * 1000) { %>
                            <span class="new-tag">New</span>
                        <% } %>
                        <button class="heart-btn" data-liked="false" data-auction-id="<%= auction._id %>">❤</button>
                        <img src="<%= auction.vehicleImage %>" alt="<%= auction.vehicleName %>">
                        <h3><%= auction.vehicleName %></h3>
                        <p class="auction-date">Auction on: <strong><%= new Date(auction.auctionDate).toLocaleDateString() %></strong></p>
                        <div class="car-details">
                            <p><strong>Year:</strong> <%= auction.year %></p>
                            <p><strong>Mileage:</strong> <%= auction.mileage %> km</p>
                            <p><strong>Fuel Type:</strong> <%= auction.fuelType.charAt(0).toUpperCase() + auction.fuelType.slice(1) %></p>
                            <p><strong>Transmission:</strong> <%= auction.transmission.charAt(0).toUpperCase() + auction.transmission.slice(1) %></p>
                            <p><strong>Condition:</strong> <%= auction.condition.charAt(0).toUpperCase() + auction.condition.slice(1) %></p>
                            <p><strong>Starting Bid:</strong> ₹<%= auction.startingBid.toLocaleString() %></p>
                        </div>
                        <div class="button-container">
                            <a href="/auction_detail?id=<%= auction._id %>" class="details-btn">Details</a>
                            <a href="/auction?id=<%= auction._id %>" class="bid-btn">Place Bid</a>
                        </div>
                    </div>
                <% }); %>
            <% } else { %>
                <div class="no-items">
                    <p>No auctions available at the moment. Please check back later.</p>
                </div>
            <% } %>
        </div>

        <!-- Pagination (can be implemented later if needed) -->
        <!-- <div class="pagination">
            <button>1</button>
            <button class="active">2</button>
            <button>3</button>
            <button>Next</button>
        </div> -->
    </div>

    <!-- Include Footer -->
    <%- include('partials/footer') %>

    <script>
        // Heart button functionality
        document.addEventListener('DOMContentLoaded', function() {
            // Initialize wishlist status
            initializeWishlistStatus();
            
            // Add event listeners to heart buttons
            document.querySelectorAll('.heart-btn').forEach(button => {
                button.addEventListener('click', function() {
                    const isLiked = this.getAttribute('data-liked') === 'true';
                    const auctionId = this.getAttribute('data-auction-id');
                    
                    // Toggle liked state
                    this.setAttribute('data-liked', !isLiked);
                    this.style.color = !isLiked ? '#ff6b00' : '#ccc';
                    
                    // Send request to server
                    fetch('/api/wishlist', {
                        method: isLiked ? 'DELETE' : 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({ 
                            auctionId: auctionId,
                            type: 'auction'
                        })
                    })
                    .then(response => response.json())
                    .then(data => {
                        if (!data.success) {
                            // If operation failed, revert the button state
                            this.setAttribute('data-liked', isLiked);
                            this.style.color = isLiked ? '#ff6b00' : '#ccc';
                            console.error('Wishlist operation failed:', data.message);
                        }
                    })
                    .catch(error => {
                        // If there was an error, revert the button state
                        this.setAttribute('data-liked', isLiked);
                        this.style.color = isLiked ? '#ff6b00' : '#ccc';
                        console.error('Error:', error);
                    });
                });
            });
        });

        // Initialize heart buttons based on wishlist
        function initializeWishlistStatus() {
            fetch('/api/wishlist')
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        // Set heart buttons for auctions
                        document.querySelectorAll('.heart-btn[data-auction-id]').forEach(button => {
                            const auctionId = button.getAttribute('data-auction-id');
                            if (data.wishlist.auctions && data.wishlist.auctions.includes(auctionId)) {
                                button.setAttribute('data-liked', 'true');
                                button.style.color = '#ff6b00';
                            } else {
                                button.setAttribute('data-liked', 'false');
                                button.style.color = '#ccc';
                            }
                        });
                    }
                })
                .catch(error => {
                    console.error('Error loading wishlist:', error);
                });
        }
    </script>
</body>
</html>